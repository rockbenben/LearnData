"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[7886],{7886:(e,n,a)=>{a.r(n),a.d(n,{ParseErrorBuilder:()=>o});var i=a(5881);const o={p:()=>new i.P({code:i.c.BadSignature,reason:"missing WEBVTT file header",line:1}),q:(e,n)=>new i.P({code:i.c.BadTimestamp,reason:`cue start timestamp \`${e}\` is invalid on line ${n}`,line:n}),r:(e,n)=>new i.P({code:i.c.BadTimestamp,reason:`cue end timestamp \`${e}\` is invalid on line ${n}`,line:n}),s:(e,n,a)=>new i.P({code:i.c.BadTimestamp,reason:`cue end timestamp \`${n}\` is greater than start \`${e}\` on line ${a}`,line:a}),w:(e,n,a)=>new i.P({code:i.c.BadSettingValue,reason:`invalid value for cue setting \`${e}\` on line ${a} (value: ${n})`,line:a}),v:(e,n,a)=>new i.P({code:i.c.UnknownSetting,reason:`unknown cue setting \`${e}\` on line ${a} (value: ${n})`,line:a}),u:(e,n,a)=>new i.P({code:i.c.BadSettingValue,reason:`invalid value for region setting \`${e}\` on line ${a} (value: ${n})`,line:a}),t:(e,n,a)=>new i.P({code:i.c.UnknownSetting,reason:`unknown region setting \`${e}\` on line ${a} (value: ${n})`,line:a}),N:(e,n)=>new i.P({code:i.c.BadFormat,reason:`format missing for \`${e}\` block on line ${n}`,line:n})}}}]);